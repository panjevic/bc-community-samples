{
    "$connections": {
        "value": {
            "blockchainethereum": {
                "connectionId": "/subscriptions/1351f53f-23e6-41d5-9615-fc64f09dc660/resourceGroups/hackaton19/providers/Microsoft.Web/connections/blockchainethereum-2",
                "connectionName": "blockchainethereum-2",
                "id": "/subscriptions/1351f53f-23e6-41d5-9615-fc64f09dc660/providers/Microsoft.Web/locations/westeurope/managedApis/blockchainethereum"
            },
            "salesforce_1": {
                "connectionId": "/subscriptions/1351f53f-23e6-41d5-9615-fc64f09dc660/resourceGroups/hackaton19/providers/Microsoft.Web/connections/salesforce-1",
                "connectionName": "salesforce-1",
                "id": "/subscriptions/1351f53f-23e6-41d5-9615-fc64f09dc660/providers/Microsoft.Web/locations/westeurope/managedApis/salesforce"
            }
        }
    },
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Execute_smart_contract_function_(incurring_gas_cost)": {
                "inputs": {
                    "body": {
                        "actorIdHash": "@{body('Hash_ActorId')}",
                        "date": "@triggerBody()?['SystemModstamp']",
                        "opportunityHash": "@{body('Hash_opportunity')}",
                        "status": "@body('Get_record_2')?['Discount_Percent_Status__c']"
                    },
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['blockchainethereum']['connectionId']"
                        }
                    },
                    "method": "post",
                    "path": "/contract/functions/@{encodeURIComponent(encodeURIComponent('addLog'))}/execute",
                    "queries": {
                        "abi": "[\n\t{\n\t\t\"constant\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"opportunityHash\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"actorIdHash\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"date\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"status\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"addLog\",\n\t\t\"outputs\": [],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"id\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"opportunityHash\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"actorIdHash\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"date\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"name\": \"status\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"ApprovalLogAdded\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"ApprovalLogs\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"Id\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"OpportunityHash\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"ActorIdHash\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"Date\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"Status\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [],\n\t\t\"name\": \"getCount\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t}\n]",
                        "contractAddress": "0xd69eef42968e1d75f1f67435ae727e58145bf5f9"
                    }
                },
                "runAfter": {
                    "Hash_ActorId": [
                        "Succeeded"
                    ]
                },
                "type": "ApiConnection"
            },
            "Get_record": {
                "inputs": {
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['salesforce_1']['connectionId']"
                        }
                    },
                    "method": "get",
                    "path": "/v2/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('ProcessInstance'))}/items/@{encodeURIComponent(encodeURIComponent(triggerBody()?['ProcessInstanceId']))}"
                },
                "runAfter": {},
                "type": "ApiConnection"
            },
            "Get_record_2": {
                "inputs": {
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['salesforce_1']['connectionId']"
                        }
                    },
                    "method": "get",
                    "path": "/v2/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('Opportunity'))}/items/@{encodeURIComponent(encodeURIComponent(body('Get_record')?['TargetObjectId']))}"
                },
                "runAfter": {
                    "Get_record": [
                        "Succeeded"
                    ]
                },
                "type": "ApiConnection"
            },
            "Hash_ActorId": {
                "inputs": {
                    "body": "@triggerBody()?['ActorId']",
                    "function": {
                        "id": "/subscriptions/1351f53f-23e6-41d5-9615-fc64f09dc660/resourceGroups/hackaton19/providers/Microsoft.Web/sites/hackaton19/functions/HttpTrigger1"
                    }
                },
                "runAfter": {
                    "Hash_opportunity": [
                        "Succeeded"
                    ]
                },
                "type": "Function"
            },
            "Hash_opportunity": {
                "inputs": {
                    "body": {
                        "accountId": "@body('Get_record_2')?['AccountId']",
                        "amount": "@body('Get_record_2')?['Amount']",
                        "discountPercent": "@body('Get_record_2')['Discount_Percent__c']",
                        "opportunityId": "@body('Get_record_2')?['Id']"
                    },
                    "function": {
                        "id": "/subscriptions/1351f53f-23e6-41d5-9615-fc64f09dc660/resourceGroups/hackaton19/providers/Microsoft.Web/sites/hackaton19/functions/HttpTrigger1"
                    }
                },
                "runAfter": {
                    "Get_record_2": [
                        "Succeeded"
                    ]
                },
                "type": "Function"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "parameters": {
            "$connections": {
                "defaultValue": {},
                "type": "Object"
            }
        },
        "triggers": {
            "When_a_record_is_modified": {
                "inputs": {
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['salesforce_1']['connectionId']"
                        }
                    },
                    "method": "get",
                    "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('ProcessInstanceStep'))}/onupdateditems"
                },
                "recurrence": {
                    "frequency": "Minute",
                    "interval": 3
                },
                "splitOn": "@triggerBody()?['value']",
                "type": "ApiConnection"
            }
        }
    }
}